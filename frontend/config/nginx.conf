user deployer;
worker_processes  4;

error_log  /aircloak/website/log/nginx-error.log;
pid        /aircloak/website/tmp/nginx.pid;

events {
  worker_connections  1024;
  multi_accept on;
}

http {
  include /etc/nginx/mime.types;
  access_log /aircloak/website/log/nginx-access.log;

  sendfile on;

  keepalive_timeout  0;
  tcp_nodelay on;

  gzip on;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  upstream unicorn {
    server unix:/tmp/air-rails.sock fail_timeout=0;
    keepalive 16;
  }

  server {
    listen *:8080;
    root /aircloak/website/public;

    location ^~ /assets/ {
      gzip_static on;
      expires max;
      add_header ETag "";
      add_header Cache-Control public;
    }

    # Temporary fix until we research further. It looks like without this
    # setting, the max body size is not honored properly. This needs to be
    # investigated further, but as a quick fix, we're including it here.
    client_max_body_size 100m;

    try_files $uri/index.html $uri @unicorn;

    # Proxies requests to unicorn (rails)
    location @unicorn {
      client_max_body_size 4G;

      # This site is accessed internally via outer nginx router, so we can
      # allow longer keepalives
      keepalive_timeout 3600;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # enable this if you forward HTTPS traffic to unicorn,
      # this helps Rack set the proper URL scheme for doing redirects:
      proxy_set_header X-Forwarded-Proto $scheme;

      # pass the Host: header from the client right along so redirects
      # can be set properly within the Rack application
      proxy_set_header Host $http_host;

      gzip on;
      gzip_comp_level 6;
      gzip_min_length 4096;
      gzip_proxied any;
      gzip_types text/plain application/json text/xml application/xml text/csv;

      proxy_read_timeout 150s;

      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;

      proxy_pass http://unicorn;
    }
  }
}
