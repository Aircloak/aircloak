-# Includes additional, page-specific javascripts
= content_for(:javascript_include) {javascript_include_tag "tasks/main", "data-turbolinks-track" => true}
= content_for :javascript do
  :coffeescript
    $(document).ready ->
      new Tasks.Editor(
        #{@task.task_type},
        #{@task_exceptions},
        #{@completions},
        #{@tables_json},
        #{PrefetchFilter::OperatorSqlToCloak.to_json}
      )

#taskEditor
  .form-container
    = form_for @task, url: (@task.new_record? ? tasks_path : task_path(@task.token)), :html => {:class => "form-horizontal new_query"} do |f|
      - if @task.errors.any?
        .well.alert-error
          %h3= "#{pluralize(@task.errors.count, "error")} prohibited this task from being saved:"
          %ul
            - @task.errors.full_messages.each do |msg|
              %li= msg

      .control-group
        = control_label "Task name"
        .controls
          = f.text_field :name
      - if current_user.has_multiple_clusters?
        .control-group
          = control_label "Belongs to cluster"
          .controls
            = f.select :cluster_id, current_user.ready_clusters.map {|cluster| [cluster.name, cluster.id,
                {'data-streaming-capability' => cluster.capable_of?(:streaming_queries),
                 'data-periodic-capability' => cluster.capable_of?(:periodic_queries),
                 'data-column_selection-capability' => cluster.capable_of?(:task_select_columns)}]}
      - elsif current_user.ready_clusters.first
        = hidden_field_tag "task[cluster_id]", current_user.ready_clusters.first.id,
            "data-streaming-capability" => current_user.ready_clusters.first.capable_of?(:streaming_queries),
            "data-periodic-capability" => current_user.ready_clusters.first.capable_of?(:periodic_queries),
            "data-column_selection-capability" => current_user.ready_clusters.first.capable_of?(:task_select_columns)

      #taskTypeParams{style: "display:none;"}
        .control-group
          = control_label "Type", tooltip: "task_type"
          .controls
            = f.collection_select(:task_type, Task.types, :id, :name, {}, disabled: !(@task.new_record?))

      #periodicTaskParams{style: "display:none;"}
        .control-group
          = control_label "Period", tooltip: "task_period"
          .controls
            = f.text_field :period, "data-period-picker" => true

      #streamingTaskParams{style: "display:none;"}
        .control-group
          = control_label "Reporting interval [sec]", tooltip: "report_interval"
          .controls
            = f.number_field :report_interval
        .control-group
          = control_label "Bucket expiry time [sec]", tooltip: "user_expire_interval"
          .controls
            = f.number_field :user_expire_interval

      .control-group
        = control_label "Data", tooltip: "data"
        .controls
          = f.hidden_field :data
          = f.hidden_field :test_data
          #prefetchTables

      #taskExceptions

      .control-group
        = control_label "Code", tooltip: "code"
        .controls
          = f.text_area :code
      .control-group
        = control_label "", tooltip: "save_button"
        .controls
          #taskStatus.well.hidden
          = f.submit 'Save', :class => "btn btn-success"
  %hr
  %h3= "Testing"
  #sandboxRunner