title: Authentication
order: 2
content: |

  # Authentication

  The cloak APIs rely on client certificates for authenticating access.
  The client certificates are provided both in PEM and PKCS12 format, and can be managed
  on the <%= site_link controller.keys_path, "keys page" %>.

  Cloaks support four types of certificates:

  - certificates for uploading data for users in bulk
  - certificates restricted to uploading data for only a single, identified user.
    This is useful when wanting to upload data from an end-users device,
    but requires integration with your backend services for commissioning
    certificates
  - certificates for executing tasks against a cluster
  - certificates for administering a cluster. Administrative tasks include adding,
    altering or removing tables

  <% if has_multiple_clusters? -%>
  <% if data_key_count == 0 -%>
  Your can use the same keys for all your clusters.
  <% else -%>
  The keys you have created on the <%= site_link controller.keys_path, "keys page" %>
  can be used across all your clusters.
  <% end -%>
  <% end -%>

  ## Authentication example

  How you perform authentication with client certificates differs from language to language,
  but using [curl](http://curl.haxx.se/), you would use the `--cert CertificateFile.pfx` flag.

  Taking the API for uploading user data in bulk as an example:
  Assuming you had data for the __<%= sample_user_table_name %>__ stored in a file in your current directory
  called __<%= sample_user_table_name %>.json__, and a key named <%= sample_data_key_name %>, you could issue the following
  [curl](http://curl.haxx.se/) command to upload the data:

  ```bash
  curl -XPOST -k --cert <%= sample_data_key_name %> --date @<%= sample_user_table_name %>.json https://<%= sample_cloak_name %>/bulk_insert
  ```
