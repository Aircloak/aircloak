#!/usr/bin/env bash

function configure_iptables {
  # enable all
  iptables -P INPUT ACCEPT
  iptables -P FORWARD ACCEPT
  iptables -P OUTPUT ACCEPT
  iptables -F

  # ssh, http, https, and carbon pickle
  iptables -A INPUT -p tcp -m multiport --dports 22,80,443,2004 -m state --state NEW,ESTABLISHED -j ACCEPT
  iptables -A OUTPUT -p tcp -m multiport --sports 22,80,443,2004 -m state --state ESTABLISHED -j ACCEPT

  # outbound dns
  iptables -A INPUT -p udp --sport 53 -j ACCEPT
  iptables -A OUTPUT -p udp --dport 53 -j ACCEPT

  # all local requests
  iptables -A INPUT -i lo -j ACCEPT
  iptables -A FORWARD -i lo -j ACCEPT
  iptables -A OUTPUT -o lo -j ACCEPT

  # logging of dropped connections
  iptables -N LOGGING
  iptables -A INPUT -j LOGGING
  iptables -A OUTPUT -j LOGGING
  iptables -A LOGGING -m limit --limit 10/min -j LOG --log-prefix "IPTables Packet Dropped: " --log-level 4
  iptables -A LOGGING -j DROP

  # block everything else
  iptables -P INPUT DROP
  iptables -P FORWARD DROP
  iptables -P OUTPUT DROP
}

function setup_firewall {
  # For some reason, on vagrant powered machine, provisioning session hangs if we disable outgoing traffic.
  # The system still remains correctly provisioned, but the session is just hanged. If we break
  # out of it, we can reconnect to the machine, and iptables rules are correctly saved.
  echo "
    Setting up the firewall...

    If you're in vagrant, and the shell hangs, just press ctrl+c twice.
    The machine will be correctly provisioned, regardless of the shell hanging.
  "

  copy_asset 'if-pre-up-iptables' '/etc/network/if-pre-up.d/iptables'
  chmod +x '/etc/network/if-pre-up.d/iptables'
  configure_iptables
  iptables-save > /etc/iptables.up.rules
}