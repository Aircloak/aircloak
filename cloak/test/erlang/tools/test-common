main(_Args) ->
  io:format("Memory consumption: ~.1f MB~n", [measure(fun() -> run_test() end) / (1024 * 1024)]),
  io:format("The following is a fake coverage message for scripts that parse for such information:~n"),
  io:format("Overall coverage: 0.0%~n"),
  io:format("Finished test ~p~n~n", [test_name()]).

measure(F) ->
  Pid = spawn(fun () -> memory_loop(0) end),
  F(),
  Pid ! {stop, self()},
  receive
    {memory, Pid, N1} -> N1
  end.

memory_loop(N) ->
  MemList = erlang:memory(),
  N1 = max(N, proplists:get_value(total, MemList)),
  receive
    {stop, Pid} ->
      Pid ! {memory, self(), N1},
      ok
  after 10 ->
    memory_loop(N1)
  end.
