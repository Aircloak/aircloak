defmodule Compliance.VulnerabilityTest do
  use ComplianceCase, async: true

  @tag compliance: "vulnerability"
  test "divide by 0", context do
    assert_consistent_and_not_failing(context, "SELECT COUNT(*) FROM users_public WHERE 1/(height-height) IS NULL")
  end

  @tag compliance: "vulnerability"
  test "mod by 0", context do
    assert_consistent_and_not_failing(context, "SELECT COUNT(*) FROM users_public WHERE 1%trunc(age-age) IS NULL")
  end

  @tag compliance: "vulnerability"
  test "sqrt over negative input", context do
    assert_consistent_and_not_failing(context, "SELECT COUNT(*) FROM users_public WHERE sqrt(-age) IS NULL")
  end

  @tag compliance: "vulnerability"
  test "casting text to boolean", context do
    assert_consistent_and_not_failing(context, "SELECT COUNT(*) FROM users_public WHERE cast(name as boolean) IS NULL")
  end

  @tag compliance: "vulnerability"
  test "casting large real values to integer", context do
    context
    # since Mongo doesn't support integers, casting does nothing
    |> disable_for(Cloak.DataSource.MongoDB, true)
    |> assert_consistent_and_not_failing(
      "SELECT COUNT(*) FROM users_public WHERE cast(height + 100000000000000000000.0 as integer) IS NULL"
    )
  end
end
