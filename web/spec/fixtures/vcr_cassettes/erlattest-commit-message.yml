---
http_interactions:
- request:
    method: get
    uri: https://api.github.com/repos/aircloak/erlattest/commits/0253132d55e40e3f8757b4e3dda6d6967fc90726?access_token=273c13ccc918a992618a503df7dadfe06f70b3f5
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Github Ruby Gem 0.10.2
      Accept:
      - application/vnd.github.v3+json,application/vnd.github.beta+json;q=0.5,application/json;q=0.1
      Accept-Charset:
      - utf-8
      Authorization:
      - Token token="273c13ccc918a992618a503df7dadfe06f70b3f5"
  response:
    status:
      code: 200
      message: 
    headers:
      Server:
      - GitHub.com
      Date:
      - Wed, 30 Oct 2013 12:27:49 GMT
      Content-Type:
      - application/json; charset=utf-8
      Status:
      - 200 OK
      X-RateLimit-Limit:
      - '5000'
      X-RateLimit-Remaining:
      - '4967'
      X-RateLimit-Reset:
      - '1383137018'
      Cache-Control:
      - private, max-age=60, s-maxage=60
      Last-Modified:
      - Sat, 07 Sep 2013 06:30:02 GMT
      ETag:
      - '"eec75ad47ac8738ed183917000adf9f9"'
      X-OAuth-Scopes:
      - user, public_repo, repo, gist
      X-Accepted-OAuth-Scopes:
      - repo, public_repo, repo:status, repo:deployment, delete_repo, site_admin
      Vary:
      - Accept, Authorization, Cookie, Accept-Encoding
      X-GitHub-Media-Type:
      - github.v3; format=json
      X-Content-Type-Options:
      - nosniff
      Content-Length:
      - '3209'
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Expose-Headers:
      - ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes
      Access-Control-Allow-Origin:
      - '*'
      X-GitHub-Request-Id:
      - 541A3879:2E69:1E538EB:5270FB45
    body:
      encoding: UTF-8
      string: '{"sha":"0253132d55e40e3f8757b4e3dda6d6967fc90726","commit":{"author":{"name":"root","email":"root@srv-76-135.mpi-sws.org","date":"2013-09-07T06:30:02Z"},"committer":{"name":"root","email":"root@srv-76-135.mpi-sws.org","date":"2013-09-07T06:30:02Z"},"message":"bug
        fix.\n\nLooking for aikblob in the wrong place (holdover from where\nprivacyca
        function used to put it)","tree":{"sha":"15fed92cf6905f1786fa57789005bf87915198e4","url":"https://api.github.com/repos/Aircloak/erlattest/git/trees/15fed92cf6905f1786fa57789005bf87915198e4"},"url":"https://api.github.com/repos/Aircloak/erlattest/git/commits/0253132d55e40e3f8757b4e3dda6d6967fc90726","comment_count":0},"url":"https://api.github.com/repos/Aircloak/erlattest/commits/0253132d55e40e3f8757b4e3dda6d6967fc90726","html_url":"https://github.com/Aircloak/erlattest/commit/0253132d55e40e3f8757b4e3dda6d6967fc90726","comments_url":"https://api.github.com/repos/Aircloak/erlattest/commits/0253132d55e40e3f8757b4e3dda6d6967fc90726/comments","author":null,"committer":null,"parents":[{"sha":"f25bfd441c0d68e4828ea65af9892f6373655c52","url":"https://api.github.com/repos/Aircloak/erlattest/commits/f25bfd441c0d68e4828ea65af9892f6373655c52","html_url":"https://github.com/Aircloak/erlattest/commit/f25bfd441c0d68e4828ea65af9892f6373655c52"}],"stats":{"total":6,"additions":3,"deletions":3},"files":[{"sha":"f9a10c1115702301ee6f584a4894100b8b74dd0c","filename":"c_src/makequote.c","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Aircloak/erlattest/blob/0253132d55e40e3f8757b4e3dda6d6967fc90726/c_src/makequote.c","raw_url":"https://github.com/Aircloak/erlattest/raw/0253132d55e40e3f8757b4e3dda6d6967fc90726/c_src/makequote.c","contents_url":"https://api.github.com/repos/Aircloak/erlattest/contents/c_src/makequote.c?ref=0253132d55e40e3f8757b4e3dda6d6967fc90726","patch":"@@
        -17,7 +17,7 @@\n /* some global parameters taken from the config file: */\n
        static char *RAMSSLCERT = \"/mnt/ramdisk/ramssl.crt\";\n static char *PROOFBLOBFILE
        = \"/etc/aircloak/local-dynamic/aikproof\";\n-static char *AIKBLOBFILE = \"/etc/aircloak/local-preconfigured/aikblobfile\";\n+static
        char *AIKBLOBFILE = \"/etc/aircloak/local-dynamic/aikblob\";\n static char
        *AIKCERTFILE = \"/etc/aircloak/local-preconfigured/aikcertfile\";\n \n int
        main(argc, argv)\n@@ -103,7 +103,7 @@ int main(argc, argv)\n \n \tif (getfile(AIKCERTFILE,
        &aikcertbuf, &aikcertbufLen) == -1) {\n \t\t// if not aikcert, we are doing
        remote attestation without privacyca\n-\t\tsyslog(LOG_DEBUG, \"getfile: AIKCERTFILE
        not there (file %s, line %d)\", __FILE__, __LINE__);\n+\t\tsyslog(LOG_INFO,
        \"getfile: AIKCERTFILE not there (file %s, line %d)\", __FILE__, __LINE__);\n
        \t}\n \n \t// now send the blob and cert to the requesting erlang\n@@ -142,7
        +142,7 @@ int main(argc, argv)\n \t  \tsyslog(LOG_ERR, \"Write failed (%d
        of %d) (file %s, line %d)\", writelen, msglen, __FILE__, __LINE__);\n \t}\n
        \telse {\n-\t  \tsyslog(LOG_DEBUG, \"Write good (%d of %d) (file %s, line
        %d)\", writelen, msglen, __FILE__, __LINE__);\n+\t  \tsyslog(LOG_INFO, \"Write
        good (%d of %d) (file %s, line %d)\", writelen, msglen, __FILE__, __LINE__);\n
        \t}\n \n \tif (av_buf) free(av_buf);"}]}'
    http_version: 
  recorded_at: Wed, 30 Oct 2013 12:27:49 GMT
recorded_with: VCR 2.6.0
